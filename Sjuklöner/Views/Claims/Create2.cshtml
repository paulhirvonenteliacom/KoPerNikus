@model Sjuklöner.Viewmodels.Create2VM
@using Newtonsoft.Json

@{
    ViewBag.Title = "Create2";
}
@*<body>*@

    <div class="row margin-breadcrumb">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item breadcrumb-font">@Html.ActionLink("Ansökningar", "Index", null, new { @class = "breadcrumb-padding" })</li>
                <li class="breadcrumb-item breadcrumb-font">@Html.ActionLink("Personuppgifter och sjukperiod", "Create1", new { refNumber = Model.ReferenceNumber }, new { @class = "breadcrumb-padding" })</li>
                <li class="breadcrumb-item active breadcrumb-font breadcrumb-padding" aria-current="page">Timmar</li>
            </ol>
        </nav>
    </div>
    @using (Html.BeginForm("Create2", "Claims", new { refNumber = Model.ReferenceNumber }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        for (int i = 0; i < Model.ScheduleRowList.Count(); i++)
        {
            //Html.HiddenFor(modelItem => modelItem.ScheduleRowList[i].ScheduleRowDateString);
            @Html.HiddenFor(modelItem => modelItem.ScheduleRowList[i].ScheduleRowDate);
            @Html.HiddenFor(modelItem => modelItem.ScheduleRowList[i].DayDate);
            @Html.HiddenFor(modelItem => modelItem.ScheduleRowList[i].ScheduleRowWeekDay);
        }
        @Html.HiddenFor(modelItem => modelItem.ReferenceNumber)
        @Html.HiddenFor(modelItem => modelItem.NumberOfSubAssistants)

        <div class="row">
            <p class="col col-md-2"></p>
            <p class="page-header11 col col-md-10">Ansökan om sjuklöneersättning</p>
        </div>
        <div class="row">
            <p class="col-md-nopadding col col-md-2"></p>
            <p class="negative-left-margin4 second-page-header6 col-md-nopadding col col-md-10">Steg 2 av 4: Ange antal timmar</p>
        </div>

        <div class="row margin-bottom-medium">
            <p class="col-md-nopadding col col-md-2"></p>
            <p class="negative-left-margin5 col col-md-10">Antalet timmar ska anges i decimalformat (Exempel 1: 8,50 = 8 timmar och 30 minuter. Exempel 2: 8,25 = 8 timmar och 15 minuter.)</p>
        </div>


        @*<div class="row">
                <p class="col col-md-2"></p>
                <p class="page-header3 col col-md-10">Ansökan om sjuklöneersättning</p>
            </div>
            <div class="row">
                <p class="col col-md-2"></p>
                <p class="col col-md-10 second-page-header2">Steg 2 av 4: Ange antal timmar</p>
            </div>

            <div class="row">
                <p class="col col-md-2"></p>
                <p class="col col-md-10">Antalet timmar ska anges i decimalformat (t.ex. 8,50 = 8 timmar och 30 minuter)</p>
            </div>*@

        <div class="row">
            <div class="form-horizontal">
                <div class="row">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger font-size-11" })
                    @*<div class="col col-md-2 date-padding date-margin">
                            @for (int i = 0; i < Model.ScheduleRowList.Count(); i++)
                            {
                                <div class="row row-height-42 line-height-06">
                                    <div class="col col-md-12 col-padding-40 schedule-date">
                                        @Html.DisplayFor(modelItem => Model.ScheduleRowList[i].ScheduleRowDateString)
                                    </div>
                                </div>
                                @Html.HiddenFor(modelItem => Model.ScheduleRowList[i].ScheduleRowDateString)
                                <div class="row row-height-12 small-row-margin4 no-padding-left">
                                    <div class="col col-md-12 col-padding-40">
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="col col-md-9 div-assistant-frame div-padding">
                            <div2 class="row row-height">
                                <div class="col col-md-5 assistant-heading">
                                    Ordinarie assistent
                                </div>
                                <div class="col col-md-3">
                                    <button type="button" onclick="copyHoursToStandin()" class="btn btn-secondary btn-secondary-small-wide btn-copy-to-si">Kopiera till vikarie</button>
                                </div>
                            </div2>
                            <div class="row negative-padding-top">
                                <div class="col col-md-8 div-frame line-height-08 div-margin-left">
                                    <div5 class="row height-18 role-padding line-height-08">
                                        Antal arbetstimmar (exkl. jourtimmar)
                                    </div5>
                                    <div6 class="row height-14 line-height-04">
                                        <div class="col col-md-2 bold-14 col-md-nopadding">
                                            Antal
                                        </div>
                                        <div class="col col-md-2 bold-14 col-md-nopadding">
                                            varav
                                        </div>
                                        <div class="col col-md-2 bold-14 col-md-nopadding">
                                            varav
                                        </div>
                                        <div class="col col-md-2 bold-14 col-md-nopadding">
                                            varav
                                        </div>
                                        <div class="col col-md-2 bold-14 col-md-nopadding">
                                            varav
                                        </div>
                                    </div6>
                                    <div6 class="row height-14 line-height-04">
                                        <div class="col col-md-2 bold-14 col-md-nopadding">
                                            timmar
                                        </div>
                                        <div class="col col-md-2 bold-14 col-md-nopadding">
                                            OB-kväll
                                        </div>
                                        <div class="col col-md-2 bold-14 col-md-nopadding">
                                            OB-natt
                                        </div>
                                        <div class="col col-md-2 bold-14 col-md-nopadding">
                                            OB-helg
                                        </div>
                                        <div class="col col-md-2 bold-14 col-md-nopadding">
                                            OB-storhelg
                                        </div>
                                    </div6>
                                    @for (int i = 0; i < Model.ScheduleRowList.Count(); i++)
                                    {
                                        <div class="row row-height-24 small-row-margin3 line-height-10">
                                            <div class="col-md-nopadding col col-md-2">
                                                @Html.EditorFor(modelItem => Model.ScheduleRowList[i].Hours, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 border-radius-1 hours" } })
                                            </div>
                                            <div class="col-md-nopadding col col-md-2">
                                                @Html.EditorFor(modelItem => Model.ScheduleRowList[i].UnsocialEvening, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 border-radius-1 unsocial-evening" } })
                                            </div>
                                            <div class="col-md-nopadding col col-md-2">
                                                @Html.EditorFor(modelItem => Model.ScheduleRowList[i].UnsocialNight, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 border-radius-1 unsocial-night" } })
                                            </div>
                                            <div class="col-md-nopadding col col-md-2">
                                                @Html.EditorFor(modelItem => Model.ScheduleRowList[i].UnsocialWeekend, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 border-radius-1 unsocial-weekend" } })
                                            </div>
                                            <div class="col-md-nopadding col col-md-2">
                                                @Html.EditorFor(modelItem => Model.ScheduleRowList[i].UnsocialGrandWeekend, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 border-radius-1 unsocial-grandweekend" } })
                                            </div>
                                            <div class="col-md-nopadding col col-md-2">

                                            </div>
                                        </div>
                                        <div class="row row-height-30 small-row-margin4 no-padding-left2">
                                            <div class="small-errormessage col-md-nopadding col col-md-2">
                                                @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].Hours, null, new { @class = "text-danger font-size-11" })
                                            </div>
                                            <div class="small-errormessage col-md-nopadding col col-md-2">
                                                @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].UnsocialEvening, null, new { @class = "text-danger font-size-11" })
                                            </div>
                                            <div class="small-errormessage col-md-nopadding col col-md-2">
                                                @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].UnsocialNight, null, new { @class = "text-danger font-size-11" })
                                            </div>
                                            <div class="small-errormessage col-md-nopadding col col-md-2">
                                                @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].UnsocialWeekend, null, new { @class = "text-danger font-size-11" })
                                            </div>
                                            <div class="small-errormessage col-md-nopadding col col-md-2">
                                                @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].UnsocialGrandWeekend, null, new { @class = "text-danger font-size-11" })
                                            </div>
                                        </div>
                                    }
                                </div>

                                <div class="col col-md-3 div-frame line-height-08 div-oncall-hours">
                                    <div5 class="row height-18 role-padding line-height-08">
                                        Jourtid, antal timmar
                                    </div5>
                                    <div6 class="row height-14 line-height-04">
                                        <div class="col col-md-5 bold-14 col-md-nopadding">
                                            Jour
                                        </div>
                                        <div class="col col-md-5 bold-14 oncall-margin col-md-nopadding">
                                            Jour
                                        </div>
                                    </div6>
                                    <div6 class="row height-14 line-height-04">
                                        <div class="col col-md-5 bold-14 col-md-nopadding">
                                            dag
                                        </div>
                                        <div class="col col-md-5 bold-14 oncall-margin col-md-nopadding">
                                            kväll/helg
                                        </div>
                                    </div6>
                                    @for (int i = 0; i < Model.ScheduleRowList.Count(); i++)
                                    {
                                        <div class="row row-height-24 small-row-margin3 line-height-06">
                                            <div class="col-md-nopadding col col-md-5">
                                                @Html.EditorFor(modelItem => Model.ScheduleRowList[i].OnCallDay, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 border-radius-1 oncall-day" } })
                                            </div>
                                            <div class="col-md-nopadding oncall-margin col col-md-5">
                                                @Html.EditorFor(modelItem => Model.ScheduleRowList[i].OnCallNight, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 border-radius-1 oncall-night" } })
                                            </div>
                                            <div class="col-md-nopadding col col-md-2">

                                            </div>
                                        </div>
                                        <div class="no-padding-left4 row row-height-30 small-row-margin4">
                                            <div class="no-padding-left3 small-errormessage2 col-md-nopadding col col-md-5">
                                                @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].OnCallDay, "", new { @class = "text-danger font-size-11" })
                                            </div>
                                            <div class="no-padding-left5 small-errormessage2 col-md-nopadding col col-md-5">
                                                @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].OnCallNight, "", new { @class = "text-danger font-size-11" })
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>*@




                    @*TEST REGULAR ASSISTANT*@
                    <div class="row">
                        <div class="col col-md-2">
                        </div>
                        <div class="col col-md-10 assistant-heading2">
                            Ordinarie assistent, @Model.RegAssistantSSNAndName
                        </div>
                        @*<div class="col col-md-3">
                                <button type="button" onclick="copyHoursToStandin()" class="btn btn-secondary btn-secondary-small-wide btn-copy-to-si">Kopiera till vikarie</button>
                            </div>*@
                    </div>

                    <div class="row height-18-2">
                        <div class="col col-md-2 height-18-2">
                        </div>
                        <div class="col col-md-6 no-col-padding">
                            <div class="height-18-2">
                                @*<div class="height-18 line-height-08">*@
                                Antal arbetstimmar (exkl. jourtimmar)
                            </div>
                        </div>
                        <div class="col col-md-3">
                            <div class="height-18-2">
                                @*<div class="height-18 line-height-08">*@
                                Antal jourtimmar
                            </div>
                        </div>
                    </div>

                    <div class="row line-height-08 margin-bottom-small2">
                        <div class="col col-md-2">
                        </div>
                        <div class="col col-md-5 no-col-padding">
                            <div class="bottom-border">
                            </div>
                        </div>
                        <div class="col col-md-1">
                        </div>
                        <div class="col col-md-2">
                            <div class="bottom-border">
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col col-md-2">
                        </div>
                        <div class="col col-md-6 no-col-padding">
                            <div6 class="height-14 line-height-04">
                                <div class="col col-md-2 bold-14 col-md-nopadding">
                                    Antal
                                </div>
                                <div class="col col-md-2 bold-14 col-md-nopadding">
                                    varav
                                </div>
                                <div class="col col-md-2 bold-14 col-md-nopadding">
                                    varav
                                </div>
                                <div class="col col-md-2 bold-14 col-md-nopadding">
                                    varav
                                </div>
                                <div class="col col-md-2 bold-14 col-md-nopadding">
                                    varav
                                </div>
                            </div6>
                        </div>
                        <div class="col col-md-3">
                            <div6 class="height-14 line-height-04">
                                <div class="col col-md-4 bold-14 col-md-nopadding">
                                    Jour
                                </div>
                                <div class="col col-md-4 bold-14 col-padding-8">
                                    Jour
                                </div>
                            </div6>
                        </div>
                    </div>

                    <div class="row line-height-08">
                        <div class="col col-md-2">
                        </div>
                        <div class="col col-md-6 no-col-padding">
                            <div6 class="row height-14 line-height-04">
                                <div class="col col-md-2 bold-14 col-md-nopadding">
                                    timmar
                                </div>
                                <div class="col col-md-2 bold-14 col-md-nopadding">
                                    OB-kväll
                                </div>
                                <div class="col col-md-2 bold-14 col-md-nopadding">
                                    OB-natt
                                </div>
                                <div class="col col-md-2 bold-14 col-md-nopadding">
                                    OB-helg
                                </div>
                                <div class="col col-md-2 bold-14 col-md-nopadding">
                                    OB-storhelg
                                </div>
                            </div6>
                        </div>
                        <div class="col col-md-3">
                            <div6 class="row height-14 line-height-04">
                                <div class="col col-md-4 bold-14 col-md-nopadding">
                                    dag
                                </div>
                                <div class="col col-md-4 bold-14 col-padding-8">
                                    kväll/helg
                                </div>
                            </div6>
                        </div>
                    </div>

                    @for (int i = 0; i < Model.ScheduleRowList.Count(); i++)
                    {
                        <div class="row line-height-10">
                            <div class="schedule-date date-left-padding col col-md-2">
                                @Html.DisplayFor(modelItem => Model.ScheduleRowList[i].ScheduleRowDateString)
                                @Html.HiddenFor(modelItem => Model.ScheduleRowList[i].ScheduleRowDateString)
                            </div>
                            <div class="col col-md-6 no-col-padding">
                                <div class="row">
                                    <div class="col col-md-2 col-padding-15">
                                        @Html.EditorFor(modelItem => Model.ScheduleRowList[i].Hours, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 hours" } })
                                    </div>
                                    <div class="col col-md-2 col-padding-10 ">
                                        @Html.EditorFor(modelItem => Model.ScheduleRowList[i].UnsocialEvening, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 unsocial-evening" } })
                                    </div>
                                    <div class="col col-md-2 col-padding-5">
                                        @Html.EditorFor(modelItem => Model.ScheduleRowList[i].UnsocialNight, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 unsocial-night" } })
                                    </div>
                                    <div class="col col-md-2 col-md-nopadding">
                                        @Html.EditorFor(modelItem => Model.ScheduleRowList[i].UnsocialWeekend, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 unsocial-weekend" } })
                                    </div>
                                    <div class="col col-md-2 negative-left-margin2">
                                        @Html.EditorFor(modelItem => Model.ScheduleRowList[i].UnsocialGrandWeekend, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 unsocial-grandweekend" } })
                                    </div>
                                    <div class="col-md-nopadding col col-md-2">

                                    </div>
                                </div>
                            </div>
                            <div class="col col-md-3">
                                <div class="row">
                                    <div class="col col-md-4">
                                        @Html.EditorFor(modelItem => Model.ScheduleRowList[i].OnCallDay, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 oncall-day" } })
                                    </div>
                                    <div class="col col-md-4 negative-left-margin6">
                                        @Html.EditorFor(modelItem => Model.ScheduleRowList[i].OnCallNight, new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 oncall-night" } })
                                    </div>
                                    <div class="col-md-nopadding col col-md-2">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="date-left-padding col col-md-2">
                            </div>
                            <div class="col col-md-6 no-col-padding">
                                <div class="row row-height-30 small-row-margin4 line-height-07">
                                    <div class="small-errormessage no-col-padding col col-md-2">
                                        @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].Hours, null, new { @class = "text-danger font-size-11 hours-val" })
                                    </div>
                                    <div class="small-errormessage col col-md-2 col-padding-6 ">
                                        @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].UnsocialEvening, null, new { @class = "text-danger font-size-11 unsocial-evening-val" })
                                    </div>
                                    <div class="small-errormessage col col-md-2 col-padding-10">
                                        @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].UnsocialNight, null, new { @class = "text-danger font-size-11 unsocial-night-val" })
                                    </div>
                                    <div class="small-errormessage col col-md-2 col-padding3">
                                        @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].UnsocialWeekend, null, new { @class = "text-danger font-size-11 unsocial-weekend-val" })
                                    </div>
                                    <div class="small-errormessage col col-md-2 col-padding2-20">
                                        @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].UnsocialGrandWeekend, null, new { @class = "text-danger font-size-11 unsocial-grandweekend-val" })
                                    </div>
                                    <div class="small-errormessage col-md-nopadding col col-md-2">
                                    </div>
                                </div>
                            </div>
                            <div class="col col-md-3">
                                <div class="row row-height-30 small-row-margin4 line-height-07">
                                    <div class="small-errormessage no-col-padding col col-md-4">
                                        @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].OnCallDay, "", new { @class = "text-danger font-size-11 oncall-day-val" })
                                    </div>
                                    <div class="small-errormessage col col-md-4 col-padding-6">
                                        @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].OnCallNight, "", new { @class = "text-danger font-size-11 oncall-night-val" })
                                    </div>
                                    <div class="small-errormessage col-md-nopadding col col-md-2">
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    @*<div class="row line-height-08">
                        <p class="col col-md-2"></p>
                        <p class="col-md-nopadding col col-md-10">Klicka på "Kopiera" om du vill kopiera timmarna från ordinarie assistent till vikarierande assistent 1.</p>*@
                    @*<div class="row display-padding5">
                            Defaultvärden för OB- och jourersättningar har använts i beräkningen.@Html.ActionLink("Klicka här ", "Index", "CollectiveAgreements", null, new { @class = "breadcrumb-padding" })för att lägga in aktuella ersättningsbelopp enligt kollektivavtal.
                        </div>*@

                    @*</div>*@
                    <div class="row line-height-04">
                        <p class="col col-md-2"></p>
                        <div class="col col-md-10 negative-left-margin7">
                            <a onclick="copyHoursToStandin()">Klicka här</a> om du vill kopiera timmarna från ordinarie assistent till vikarierande assistent 1.
                        </div>
                    </div>


                    @*TEST SUBSTITUTE ASSISTANT*@

                    @for (int k = 0; k < Model.NumberOfSubAssistants; k++)
                    {
                        <div class="row margin-top-large">
                            <div class="col col-md-2">
                            </div>
                            @if (Model.NumberOfSubAssistants == 1)
                            {
                                <div class="col col-md-10 assistant-heading2">
                                    Vikarierande assistent, @Model.SubAssistantSSNAndName[k]
                                </div>
                            }
                            else
                            {
                                <div class="col col-md-10 assistant-heading2">
                                    Vikarierande assistent @(k + 1), @Model.SubAssistantSSNAndName[k]
                                </div>
                            }
                        </div>

                        <div class="row height-18-2">
                            <div class="col col-md-2 height-18-2">
                            </div>
                            <div class="col col-md-6 no-col-padding">
                                <div class="height-18-2">
                                    Antal arbetstimmar (exkl. jourtimmar)
                                </div>
                            </div>
                            <div class="col col-md-3">
                                <div class="height-18-2">
                                    @*<div class="height-18 line-height-08">*@
                                    Antal jourtimmar
                                </div>
                            </div>
                        </div>

                        <div class="row line-height-08 margin-bottom-small2">
                            <div class="col col-md-2">
                            </div>
                            <div class="col col-md-5 no-col-padding">
                                <div class="bottom-border">
                                </div>
                            </div>
                            <div class="col col-md-1">
                            </div>
                            <div class="col col-md-2">
                                <div class="bottom-border">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col col-md-2">
                            </div>
                            <div class="col col-md-6 no-col-padding">
                                <div6 class="height-14 line-height-04">
                                    <div class="col col-md-2 bold-14 col-md-nopadding">
                                        Antal
                                    </div>
                                    <div class="col col-md-2 bold-14 col-md-nopadding">
                                        varav
                                    </div>
                                    <div class="col col-md-2 bold-14 col-md-nopadding">
                                        varav
                                    </div>
                                    <div class="col col-md-2 bold-14 col-md-nopadding">
                                        varav
                                    </div>
                                    <div class="col col-md-2 bold-14 col-md-nopadding">
                                        varav
                                    </div>
                                </div6>
                            </div>
                            <div class="col col-md-3">
                                <div6 class="height-14 line-height-04">
                                    <div class="col col-md-4 bold-14 col-md-nopadding">
                                        Jour
                                    </div>
                                    <div class="col col-md-4 bold-14 col-padding-8">
                                        Jour
                                    </div>
                                </div6>
                            </div>
                        </div>

                        <div class="row line-height-08">
                            <div class="col col-md-2">
                            </div>
                            <div class="col col-md-6 no-col-padding">
                                <div6 class="row height-14 line-height-04">
                                    <div class="col col-md-2 bold-14 col-md-nopadding">
                                        timmar
                                    </div>
                                    <div class="col col-md-2 bold-14 col-md-nopadding">
                                        OB-kväll
                                    </div>
                                    <div class="col col-md-2 bold-14 col-md-nopadding">
                                        OB-natt
                                    </div>
                                    <div class="col col-md-2 bold-14 col-md-nopadding">
                                        OB-helg
                                    </div>
                                    <div class="col col-md-2 bold-14 col-md-nopadding">
                                        OB-storhelg
                                    </div>
                                </div6>
                            </div>
                            <div class="col col-md-3">
                                <div6 class="row height-14 line-height-04">
                                    <div class="col col-md-4 bold-14 col-md-nopadding">
                                        dag
                                    </div>
                                    <div class="col col-md-4 bold-14 col-padding-8">
                                        kväll/helg
                                    </div>
                                </div6>
                            </div>
                        </div>

                        for (int i = 0; i < Model.ScheduleRowList.Count(); i++)
                        {
                            <div class="row line-height-10">
                                <div class="schedule-date date-left-padding col col-md-2">
                                    @Html.DisplayFor(modelItem => Model.ScheduleRowList[i].ScheduleRowDateString)
                                    @Html.HiddenFor(modelItem => Model.ScheduleRowList[i].ScheduleRowDateString)
                                </div>
                                <div class="col col-md-6 no-col-padding">
                                    <div class="row">
                                        <div class="col col-md-2 col-padding-15">
                                            @Html.EditorFor(modelItem => Model.ScheduleRowList[i].HoursSI[k], new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 hours-si", onchange = "validateinput('" + i + "', '" + k + "')" } })
                                        </div>
                                        <div class="col col-md-2 col-padding-10 ">
                                            @Html.EditorFor(modelItem => Model.ScheduleRowList[i].UnsocialEveningSI[k], new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 unsocial-evening-si" } })
                                        </div>
                                        <div class="col col-md-2 col-padding-5">
                                            @Html.EditorFor(modelItem => Model.ScheduleRowList[i].UnsocialNightSI[k], new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 unsocial-night-si" } })
                                        </div>
                                        <div class="col col-md-2 col-md-nopadding">
                                            @Html.EditorFor(modelItem => Model.ScheduleRowList[i].UnsocialWeekendSI[k], new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 unsocial-weekend-si" } })
                                        </div>
                                        <div class="col col-md-2 negative-left-margin2">
                                            @Html.EditorFor(modelItem => Model.ScheduleRowList[i].UnsocialGrandWeekendSI[k], new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 unsocial-grandweekend-si" } })
                                        </div>
                                        <div class="col-md-nopadding col col-md-2">

                                        </div>
                                    </div>
                                </div>
                                <div class="col col-md-3">
                                    <div class="row">
                                        <div class="col col-md-4">
                                            @Html.EditorFor(modelItem => Model.ScheduleRowList[i].OnCallDaySI[k], new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 oncall-day-si" } })
                                        </div>
                                        <div class="col col-md-4 negative-left-margin6">
                                            @Html.EditorFor(modelItem => Model.ScheduleRowList[i].OnCallNightSI[k], new { htmlAttributes = new { placeholder = "0,00", @class = "form-control small-form-control-time3 low-form-control2 oncall-night-si" } })
                                        </div>
                                        <div class="col-md-nopadding col col-md-2">
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="date-left-padding col col-md-2">
                                </div>
                                <div class="col col-md-6 no-col-padding">
                                    <div class="row row-height-30 small-row-margin4 line-height-07">
                                        <div class="small-errormessage col col-md-2 no-col-padding">
                                            @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].HoursSI[k], null, new { @class = "text-danger font-size-11 hours-si-val" })
                                        </div>
                                        <div class="small-errormessage col col-md-2 col-padding-6 ">
                                            @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].UnsocialEveningSI[k], null, new { @class = "text-danger font-size-11 unsocial-evening-si-val" })
                                        </div>
                                        <div class="small-errormessage col col-md-2 col-padding-10">
                                            @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].UnsocialNightSI[k], null, new { @class = "text-danger font-size-11 unsocial-night-si-val" })
                                        </div>
                                        <div class="small-errormessage col col-md-2 col-padding3">
                                            @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].UnsocialWeekendSI[k], null, new { @class = "text-danger font-size-11 unsocial-weekend-si-val" })
                                        </div>
                                        <div class="small-errormessage col col-md-2 col-padding2-20">
                                            @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].UnsocialGrandWeekendSI[k], null, new { @class = "text-danger font-size-11 unsocial-grandweekend-si-val" })
                                        </div>
                                        <div class="small-errormessage col-md-nopadding col col-md-2">
                                        </div>
                                    </div>
                                </div>
                                <div class="col col-md-3">
                                    <div class="row row-height-30 small-row-margin4 line-height-07">
                                        <div class="small-errormessage col col-md-4 no-col-padding">
                                            @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].OnCallDaySI[k], "", new { @class = "text-danger font-size-11 oncall-day-si-val" })
                                        </div>
                                        <div class="small-errormessage col col-md-4 col-padding-6">
                                            @Html.ValidationMessageFor(modelItem => Model.ScheduleRowList[i].OnCallNightSI[k], "", new { @class = "text-danger font-size-11 oncall-night-si-val" })
                                        </div>
                                        <div class="small-errormessage col-md-nopadding col col-md-2">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        if (k < Model.NumberOfSubAssistants - 1)
                        {
                            <div class="row line-height-04">
                                <p class="col col-md-2"></p>
                                <div class="col col-md-10 negative-left-margin7">
                                    <a onclick="copyRestToStandin(@k)">Klicka här</a> om du vill föra över resterande timmar till nästa vikarierande assistent.
                                </div>
                            </div>
                        }
                    }
                </div>

                <div class="row">
                    <div class="col col-md-2">
                    </div>
                    <div class="negative-left-margin8 col col-md-1">
                        <input class="btn btn-primary btn-primary-small" type="submit" name="submitButton" value="Till steg 3" id="proceed" />
                    </div>
                    <div class="small-padding-left8 col col-md-1">
                        <input class="btn btn-secondary btn-secondary-small" type="submit" name="submitButton" value="Spara" id="save" />
                    </div>
                    <div class="small-padding-left6 col col-md-1">
                        @Html.ActionLink("Avbryt", "IndexPageOmbud", null, new { @class = "btn btn-secondary btn-secondary-small" })
                    </div>
                    <div class="small-padding-left5 col col-md-1">
                        @Html.ActionLink(Model.ReferenceNumber, "_ShowClaim", new { refNumber = Model.ReferenceNumber }, new { @class = "js-show-view-btn btn btn-secondary btn-secondary-small btn-left-margin-5" })
                    </div>
                    <div class="hidden-by-default" id="claimnumber">@Model.ReferenceNumber</div>
                    <div id='myModal' class='modal' style="text-align:left;">
                        <div class="modal-dialog" style="width:70%; height:400px; padding:10px;">
                            <div class="modal-content" style="overflow: auto; padding:10px; background-color:#fbf9ef;">
                                <button type="button" id="closbtn" float="right"> Stäng </button>
                                <div style="height:10px;">
                                </div>
                                <div id='myModalContent' style="width:1000px; height:400px; padding:10px;">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
@*</body>*@

<script type='text/javascript'>
    $(document).ready(function assignIdsToSubAssistants() {
        var numberOfHoursSI = document.getElementsByClassName("hours-si");
        var unsocialEveningSI = document.getElementsByClassName("unsocial-evening-si");
        var unsocialNightSI = document.getElementsByClassName("unsocial-night-si");
        var unsocialWeekendSI = document.getElementsByClassName("unsocial-weekend-si");
        var unsocialGrandWeekendSI = document.getElementsByClassName("unsocial-grandweekend-si");
        var oncallDaySI = document.getElementsByClassName("oncall-day-si");
        var oncallNightSI = document.getElementsByClassName("oncall-night-si");

        for (var i = 0; i < numberOfHoursSI.length; i++) {
            numberOfHoursSI[i].id = 'hours-si' + i.toString();
            unsocialEveningSI[i].id = 'unsocial-evening-si' + i.toString();
            unsocialNightSI[i].id = 'unsocial-night-si' + i.toString();
            unsocialWeekendSI[i].id = 'unsocial-weekend-si' + i.toString();
            unsocialGrandWeekendSI[i].id = 'unsocial-grandweekend-si' + i.toString();
            oncallDaySI[i].id = 'oncall-day-si' + i.toString();
            oncallNightSI[i].id = 'oncall-night-si' + i.toString();
        }

    });

    function validateinput(dayIdx, subIdx) {
        //calculate number of sickdays and number of substitute assistants
        var numberOfHours = document.getElementsByClassName("hours");
        var numberOfHoursSI = document.getElementsByClassName("hours-si");
        var numberOfSickDays = numberOfHours.length;
        var numberOfSubAssistants = numberOfHoursSI.length / numberOfSickDays;

        var hourssival = document.getElementsByClassName('hours-si-val');

        hourssival[(subIdx * numberOfSickDays) + dayIdx].innerHTML = "Du ändrade detta värde!"
    }

    //function copyHoursToStandin() {

    //    var numberOfHours = document.getElementsByClassName("hours");
    //    var unsocialEvening = document.getElementsByClassName("unsocial-evening");
    //    var unsocialNight = document.getElementsByClassName("unsocial-night");
    //    var unsocialWeekend = document.getElementsByClassName("unsocial-weekend");
    //    var unsocialGrandWeekend = document.getElementsByClassName("unsocial-grandweekend");
    //    var oncallDay = document.getElementsByClassName("oncall-day");
    //    var oncallNight = document.getElementsByClassName("oncall-night");

    //    var numberOfHoursSI = document.getElementsByClassName("hours-si");
    //    var unsocialEveningSI = document.getElementsByClassName("unsocial-evening-si");
    //    var unsocialNightSI = document.getElementsByClassName("unsocial-night-si");
    //    var unsocialWeekendSI = document.getElementsByClassName("unsocial-weekend-si");
    //    var unsocialGrandWeekendSI = document.getElementsByClassName("unsocial-grandweekend-si");
    //    var oncallDaySI = document.getElementsByClassName("oncall-day-si");
    //    var oncallNightSI = document.getElementsByClassName("oncall-night-si");


    //    for (var i = 0; i < data.ScheduleRowList.length; i++) {
    //        if (numberOfHours[i].value != null) {
    //            numberOfHoursSI[i].value = numberOfHours[i].value;
    //        }
    //        else {
    //            numberOfHours[i].value = "0,00";
    //            numberOfHoursSI[i].value = "0,00";
    //        }

    //        if (unsocialEvening[i].value != null) {
    //            unsocialEveningSI[i].value = unsocialEvening[i].value;
    //        }
    //        else {
    //            unsocialEvening[i].value = "0,00";
    //            unsocialEveningSI[i].value = "0,00";
    //        }

    //        if (unsocialNight[i].value != null) {
    //            unsocialNightSI[i].value = unsocialNight[i].value;
    //        }
    //        else {
    //            unsocialNight[i].value = "0,00";
    //            unsocialNightSI[i].value = "0,00";
    //        }

    //        if (unsocialWeekend[i].value != null) {
    //            unsocialWeekendSI[i].value = unsocialWeekend[i].value;
    //        }
    //        else {
    //            unsocialWeekend[i].value = "0,00";
    //            unsocialWeekendSI[i].value = "0,00";
    //        }

    //        if (unsocialGrandWeekend[i].value != null) {
    //            unsocialGrandWeekendSI[i].value = unsocialGrandWeekend[i].value;
    //        }
    //        else {
    //            unsocialGrandWeekend[i].value = "0,00";
    //            unsocialGrandWeekendSI[i].value = "0,00";
    //        }

    //        if (oncallDay[i].value != null) {
    //            oncallDaySI[i].value = oncallDay[i].value;
    //        }
    //        else {
    //            oncallDay[i].value = "0,00";
    //            oncallDaySI[i].value = "0,00";
    //        }

    //        if (oncallNight[i].value != null) {
    //            oncallNightSI[i].value = oncallNight[i].value;
    //        }
    //        else {
    //            oncallNight[i].value = "0,00";
    //            oncallNightSI[i].value = "0,00";
    //        }
    //    }
    //}

    function copyRestToStandin(pos) {
        var numberOfHours = document.getElementsByClassName("hours");
        var unsocialEvening = document.getElementsByClassName("unsocial-evening");
        var unsocialNight = document.getElementsByClassName("unsocial-night");
        var unsocialWeekend = document.getElementsByClassName("unsocial-weekend");
        var unsocialGrandWeekend = document.getElementsByClassName("unsocial-grandweekend");
        var oncallDay = document.getElementsByClassName("oncall-day");
        var oncallNight = document.getElementsByClassName("oncall-night");

        var numberOfHoursSI = document.getElementsByClassName("hours-si");
        var unsocialEveningSI = document.getElementsByClassName("unsocial-evening-si");
        var unsocialNightSI = document.getElementsByClassName("unsocial-night-si");
        var unsocialWeekendSI = document.getElementsByClassName("unsocial-weekend-si");
        var unsocialGrandWeekendSI = document.getElementsByClassName("unsocial-grandweekend-si");
        var oncallDaySI = document.getElementsByClassName("oncall-day-si");
        var oncallNightSI = document.getElementsByClassName("oncall-night-si");

        var consumedHours = 0;
        var consumedUnsocialEvening = 0;
        var consumedUnsocialNight = 0;
        var consumedUnsocialWeekend = 0;
        var consumedUnsocialGrandWeekend = 0;
        var consumedOnCallDay = 0;
        var consumedOnCallNight = 0;

        //calculate the number of consumed hours by other substitute assistants
        //numberOfHours.length is equal to the number of sickdays
        //the number of substitute assistants can be calculated as numberOfHoursSI.length divided by numberOfHours.length
        var numberOfSickDays = numberOfHours.length;
        var numberOfSubAssistants = numberOfHoursSI.length / numberOfSickDays;
        for (var dayIdx = 0; dayIdx < numberOfSickDays; dayIdx++) {
            for (var subIdx = 0; subIdx < numberOfSubAssistants; subIdx++) {
                if (subIdx != pos) { //skip the hours for the substitute assistant to whom the remaining hours shall be written
                    //consumedHours += parseFloat(numberOfHoursSI[(subIdx * numberOfSickDays) + dayIdx].value.toString().replace(/,/g,'.'));

                    if (numberOfHoursSI[(subIdx * numberOfSickDays) + dayIdx].value.toString() == "") {
                        numberOfHoursSI[(subIdx * numberOfSickDays) + dayIdx].value = "0,00";
                    }
                    if (unsocialEveningSI[(subIdx * numberOfSickDays) + dayIdx].value.toString() == "") {
                        unsocialEveningSI[(subIdx * numberOfSickDays) + dayIdx].value = "0,00";
                    }
                    if (unsocialNightSI[(subIdx * numberOfSickDays) + dayIdx].value.toString() == "") {
                        unsocialNightSI[(subIdx * numberOfSickDays) + dayIdx].value = "0,00";
                    }
                    if (unsocialWeekendSI[(subIdx * numberOfSickDays) + dayIdx].value.toString() == "") {
                        unsocialWeekendSI[(subIdx * numberOfSickDays) + dayIdx].value = "0,00";
                    }
                    if (unsocialGrandWeekendSI[(subIdx * numberOfSickDays) + dayIdx].value.toString() == "") {
                        unsocialGrandWeekendSI[(subIdx * numberOfSickDays) + dayIdx].value = "0,00";
                    }
                    if (oncallDaySI[(subIdx * numberOfSickDays) + dayIdx].value.toString() == "") {
                        oncallDaySI[(subIdx * numberOfSickDays) + dayIdx].value = "0,00";
                    }
                    if (oncallNightSI[(subIdx * numberOfSickDays) + dayIdx].value.toString() == "") {
                        oncallNightSI[(subIdx * numberOfSickDays) + dayIdx].value = "0,00";
                    }

                    consumedHours += parseFloat(numberOfHoursSI[(subIdx * numberOfSickDays) + dayIdx].value.toString().replace(',','.'));
                    consumedUnsocialEvening += parseFloat(unsocialEveningSI[(subIdx * numberOfSickDays) + dayIdx].value.toString().replace(',','.'));
                    consumedUnsocialNight += parseFloat(unsocialNightSI[(subIdx * numberOfSickDays) + dayIdx].value.toString().replace(',','.'));
                    consumedUnsocialWeekend += parseFloat(unsocialWeekendSI[(subIdx * numberOfSickDays) + dayIdx].value.toString().replace(',','.'));
                    consumedUnsocialGrandWeekend += parseFloat(unsocialGrandWeekendSI[(subIdx * numberOfSickDays) + dayIdx].value.toString().replace(',','.'));
                    consumedOnCallDay += parseFloat(oncallDaySI[(subIdx * numberOfSickDays) + dayIdx].value.toString().replace(',','.'));
                    consumedOnCallNight += parseFloat(oncallNightSI[(subIdx * numberOfSickDays) + dayIdx].value.toString().replace(',','.'));
                }
            }

            //calculate the remaining number of hours and assign them to the selected substitute assistant
            numberOfHoursSI[(pos * numberOfSickDays) + dayIdx].value = parseFloat(numberOfHours[dayIdx].value.toString().replace(',', '.')) - consumedHours;
            unsocialEveningSI[(pos * numberOfSickDays) + dayIdx].value = parseFloat(unsocialEvening[dayIdx].value.toString().replace(',','.')) - consumedUnsocialEvening;
            unsocialNightSI[(pos * numberOfSickDays) + dayIdx].value = parseFloat(unsocialNight[dayIdx].value.toString().replace(',','.')) - consumedUnsocialNight;
            unsocialWeekendSI[(pos * numberOfSickDays) + dayIdx].value = parseFloat(unsocialWeekend[dayIdx].value.toString().replace(',','.')) - consumedUnsocialWeekend;
            unsocialGrandWeekendSI[(pos * numberOfSickDays) + dayIdx].value = parseFloat(unsocialGrandWeekend[dayIdx].value.toString().replace(',','.')) - consumedUnsocialGrandWeekend;
            oncallDaySI[(pos * numberOfSickDays) + dayIdx].value = parseFloat(oncallDay[dayIdx].value.toString().replace(',','.')) - consumedOnCallDay;
            oncallNightSI[(pos * numberOfSickDays) + dayIdx].value = parseFloat(oncallNight[dayIdx].value.toString().replace(',','.')) - consumedOnCallNight;

            //reset the values before calculating for the next day
            consumedHours = 0;
            consumedUnsocialEvening = 0;
            consumedUnsocialNight = 0;
            consumedUnsocialWeekend = 0;
            consumedUnsocialGrandWeekend = 0;
            consumedOnCallDay = 0;
            consumedOnCallNight = 0;
        }
    }

    $(function () {
        $(".js-show-view-btn").click(function (e) {
            e.preventDefault();
            var $buttonClicked = $(this);
            var options = {
                "backdrop": "static",
                keyboard: true
            };
            $.ajax({
                method: "GET",
                url: "/Claims/_ShowClaim",
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                data: { refNumber: this.innerHTML },
                cache: false,
                success: function (data, textStatus, jqXHR) {
                    $("#myModalContent").html(data);
                    $("#myModal").modal(options);
                    $("#myModal").modal('show');
                }
            });
        })
        $("#closbtn").click(function () {
            $('#myModal').modal('hide');
        });
    });

</script>