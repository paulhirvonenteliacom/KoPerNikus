@model Sjuklöner.Viewmodels.Create1VM

@{
    ViewBag.Title = "Create1";
}

<div class="row margin-breadcrumb">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item breadcrumb-font">@Html.ActionLink("Ansökningar", "Index", null, new { @class = "breadcrumb-padding" })</li>
            <li class="breadcrumb-item active breadcrumb-font breadcrumb-padding" aria-current="page">Sjukperiod</li>
        </ol>
    </nav>
</div>

@using (Html.BeginForm("Create1", "Claims", new { refNumber = Model.ReferenceNumber }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ReferenceNumber)
    @Html.HiddenFor(model => model.OrganisationNumber)
    for (int i = 0; i < Model.AssistantIds.Count(); i++)
    {
        @Html.HiddenFor(model => model.AssistantIds[i])
    }

    <div class="row">
        <p class="col col-md-2"></p>
        <p class="page-header3 col col-md-10">Ansökan om sjuklöneersättning</p>
        <br>
    </div>
    <div class="row">
        <p class="col col-md-2"></p>
        <p class="col col-md-10 second-page-header2">Steg 1: Ange personuppgifter och sjukperiod</p>
    </div>

    <div class="row">
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @*ORGANISATIONNUMBER NEEDED IN DEMO MODE!!!
                    <div class="form-group">
                    @Html.LabelFor(model => model.OrganisationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 align-bottom1">
                        @Html.EditorFor(model => model.OrganisationNumber, new { htmlAttributes = new { placeholder = "", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OrganisationNumber, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerSSN, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CustomerSSN, new { htmlAttributes = new { placeholder = "", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerSSN, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RegularAssistants, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedRegAssistantId, new SelectList(Model.RegularAssistants, "Value", "Text", Model.SelectedRegAssistantId), "- ingen vald -", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RegularAssistants, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SubstituteAssistants, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedSubAssistantId, new SelectList(Model.SubstituteAssistants, "Value", "Text", Model.SelectedSubAssistantId), "- ingen vald -", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SubstituteAssistants, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstDayOfSicknessDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstDayOfSicknessDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstDayOfSicknessDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastDayOfSicknessDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastDayOfSicknessDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastDayOfSicknessDate, "", new { @class = "text-danger" })
                </div>
            </div>

            @*EMAIL OPTIONALLY NEEDED IN DEMO MODE!!!
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            @*@if (Model.Rejected)
                {
                    <div class="row">
                        <p class="col col-md-2"></p>
                        <p class="col col-md-10">@Model.RejectReason</p>
                    </div>
                }*@

            <div class="row">
                <div class="form-group">
                    <div class="col col-md-offset-2 col-md-1">
                        <input class="btn btn-primary btn-primary-small btn-left-margin-10" type="submit" name="submitButton" value="Till steg 2" id="proceed" />
                    </div>
                    <div class="col col-md-1">
                        <input class="btn btn-secondary btn-secondary-small btn-left-margin-5" type="submit" name="submitButton" value="Spara" id="save" />
                    </div>
                    <div class="col col-md-1">
                        <input class="btn btn-secondary btn-secondary-small" type="submit" name="submitButton" value="Avbryt" id="cancel" />
                    </div>
                </div>
            </div>
            <br>
            <br>
            <br>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
