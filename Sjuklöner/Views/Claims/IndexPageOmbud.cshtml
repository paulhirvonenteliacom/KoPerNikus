@model Sjuklöner.Viewmodels.IndexPageOmbudVM

@{
    ViewBag.Title = "Index";
}
<body>
    <div class="row index-page-margin">
        <p class="page-header12 col col-md-10">Ansökningar</p>
    </div>

    @if (TempData["PdfSuccess"] != null)
    {
        <div class="alert positive-result row" id="PdfEventOmbud">
            <p class="negative-left-margin10 col col-md-12 line-height-10">@TempData["PdfSuccess"]</p>
        </div>
    }
    @if (TempData["PdfFail"] != null)
    {
        <div class="alert negative-result row" id="PdfEventOmbudFail">
            <p class="negative-left-margin10 col col-md-12 line-height-10">@TempData["PdfFail"]</p>
        </div>
    }
    <br />
    <br />

    <div class="row">
        @if (Model.AssistantsExist)
        {
            <div class="col col-md-3 no-padding-left2">
                @Html.ActionLink("Skapa ny ansökan", "Create1", new { claimExists = 1 }, new { @class = "btn btn-primary btn-primary-wide3" })
            </div>
            <br />
            <br />
        }
        else
        {
            <div class="col col-md-6 left-margin-12 font-size-16">
                Välkommen! Du är nu registrerad som ombud för @Model.CompanyName. För att kunna skapa en ansökan krävs information om minst två assistenter, en insjuknad ordinarie assistent och minst en vikarierande assistent.
                <p class="col-no-left-padding">@Html.ActionLink("Klicka här ", "Create", "Assistants", null, null)för att skapa assistenter.</p>
            </div>
            <br />
            <br />
        }
    </div>

    <hr class="claim-divider" />
    @using (Html.BeginForm("IndexPageOmbud", "Claims", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        <div class="row">
            <div class="col col-md-4 second-page-header7">
                Filtrera ansökningar
            </div>
        </div>
        <div class="row filter-row">
            <div class="col col-md-3 align-bottom9">
                @Html.DropDownListFor(model => model.SelectedTimePeriodId, new SelectList(Model.TimePeriods, "Value", "Text", Model.SelectedTimePeriodId), "- Ingen vald tidsperiod -", new { @class = "form-control claim-filter1" })
            </div>
            <div class="col col-md-3 align-bottom9">
                @Html.DropDownListFor(model => model.SelectedKeyId, new SelectList(Model.Keys, "Value", "Text", Model.SelectedKeyId), "- Ingen vald söknyckel -", new { @class = "form-control claim-filter2", id = "searchkey", onchange = "selectSearchKey()" })
            </div>
            <div class="col col-md-3 align-bottom9">
                @Html.EditorFor(model => model.SearchString, new { htmlAttributes = new { placeholder = "Ange söktext här", @class = "form-control claim-filter3", autofocus = "autofocus", id = "searchtext", onchange = "checkValidationError()" } })
            </div>
            <div class="col col-md-2 align-bottom11">
                @Html.EditorFor(model => model.MyClaims, new { htmlAttributes = new { @class = "myclaims-checkbox" } })
                <span class="align-top1">Mina ansökningar</span>
            </div>
            <div class="col col-md-1 col-no-left-padding col-no-right-padding">
                <input type="submit" value="Filtrera" class="btn btn-secondary btn-secondary-small3 align-bottom9" id="filter-btn" onclick="checkIfKeySelected()" />
            </div>
        </div>
        <div class="row row-validation-20 line-height-07">
            <div class="col col-md-2">
            </div>
            <div class="col col-md-8 text-danger font-size-11 filter-error" id="searchstring_butnokey">
            </div>
        </div>
    }
    <hr class="claim-divider2" />
    <div class="row">
        <div class="col">
            @if (Model.DecidedClaims?.Count() > 0 && ((Model.SelectedTimePeriodId != null && Model.SelectedTimePeriodId != 0) || (Model.SelectedKeyId != null && Model.SelectedKeyId != 0) || Model.MyClaims || !string.IsNullOrWhiteSpace(Model.SearchString)))
            {
                <div class="second-page-header8">
                    Beslutade (@Model.NumberOfDecidedFiltered av @Model.NumberOfDecided st)
                </div>
                <div class="ordinary-text">
                    @Model.FilterTextDecided
                </div>
            }
            else if (Model.DecidedClaims?.Count() == 0 && ((Model.SelectedTimePeriodId != null && Model.SelectedTimePeriodId != 0) || (Model.SelectedKeyId != null && Model.SelectedKeyId != 0) || Model.MyClaims || !string.IsNullOrWhiteSpace(Model.SearchString)))
            {
                <div class="second-page-header8">
                    Beslutade (@Model.NumberOfDecidedFiltered av @Model.NumberOfDecided st)
                </div>
            }
            else
            {
                <div class="second-page-header9">
                    Beslutade (@Model.NumberOfDecided st)
                </div>
            }

            @if (Model.DecidedClaims?.Count() > 0)
            {
                <table class="table">
                    <tr>
                        <th class="small-col-ombud">
                            Referensnummer
                        </th>
                        <th class="small-col-ombud"></th>
                        <th class="small-col-ombud">
                            Beslutsdatum
                        </th>
                        <th class="small-col-ombud">
                            Kundens personnummer
                        </th>
                        <th class="ssmall-col-ombud">
                            Första kalenderdag
                        </th>
                        <th class="ssmall-col-ombud">
                            Sista kalenderdag
                        </th>
                        <th class="small-col-ombud">
                            Yrkat belopp (Kr)
                        </th>
                        @*<th class="medium-col-ombud">
                                Godkänt belopp (Kr)
                            </th>
                            <th class="medium-col-ombud">
                                Avslaget belopp (Kr)
                            </th>*@
                        <th></th>
                    </tr>

                    @foreach (var item in Model.DecidedClaims)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(item.ReferenceNumber, "_ShowClaim", new { refNumber = item.ReferenceNumber }, new { @class = "btn-sm js-show-view-btn btn btn-primary btn-primary-small" })
                                @*@Html.ActionLink(item.ReferenceNumber, "ShowClaimDetails", "Claims", new { referenceNumber = item.ReferenceNumber }, new { @class = "btn btn-primary btn-primary-small" })*@
                            </td>
                            <td>
                                @Html.ActionLink("Skapa Pdf", "ClaimDetailsAsPdf", new { refNumber = item.ReferenceNumber }, new { @class = "btn btn-secondary btn-secondary-small" })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DecisionDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CustomerSSN)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FirstClaimDayShort)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastClaimDayShort)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ClaimedSum)
                            </td>
                            @*<td class="highlight-green-bold">
                                    @Html.DisplayFor(modelItem => item.ApprovedSum)
                                </td>
                                <td class="highlight-red-bold">
                                    @Html.DisplayFor(modelItem => item.RejectedSum)
                                </td>*@
                            <td></td>
                        </tr>
                    }
                </table>
            }
            else if ((Model.SelectedTimePeriodId != null && Model.SelectedTimePeriodId != 0) || (Model.SelectedKeyId != null && Model.SelectedKeyId != 0) || Model.MyClaims || !string.IsNullOrWhiteSpace(Model.SearchString))
            {
                <div class="ordinary-text">
                    Du har inga beslutade ansökningar som uppfyller det valda filtret.
                </div>
            }
            else
            {
                <div class="ordinary-text">
                    Du har inga beslutade ansökningar.
                </div>
            }
        </div>
    </div>

    <hr class="claim-divider2" />
    <div class="row">
        <div class="col">
            @if (Model.DraftClaims?.Count() > 0 && ((Model.SelectedTimePeriodId != null && Model.SelectedTimePeriodId != 0) || (Model.SelectedKeyId != null && Model.SelectedKeyId != 0) || Model.MyClaims || !string.IsNullOrWhiteSpace(Model.SearchString)))
            {
                <div class="second-page-header8">
                    Utkast (@Model.NumberOfDraftFiltered av @Model.NumberOfDraft st)
                </div>
                <div class="ordinary-text">
                    @Model.FilterTextDraft
                </div>
            }
            else if (Model.DraftClaims?.Count() == 0 && ((Model.SelectedTimePeriodId != null && Model.SelectedTimePeriodId != 0) || (Model.SelectedKeyId != null && Model.SelectedKeyId != 0) || Model.MyClaims || !string.IsNullOrWhiteSpace(Model.SearchString)))
            {
                <div class="second-page-header8">
                    Utkast (@Model.NumberOfDraftFiltered av @Model.NumberOfDraft st)
                </div>
            }
            else
            {
                <div class="second-page-header9">
                    Utkast (@Model.NumberOfDraft st)
                </div>
            }

            @if (Model.DraftClaims?.Count() > 0)
            {
                <table class="table">
                    <tr>
                        <th class="small-col-ombud">
                            Referensnummer
                        </th>
                        <th class="small-col-ombud"></th>
                        <th class="small-col-ombud">
                            Skapad datum
                        </th>
                        @*<th class="small-col-ombud">
                        Ombud
                    </th>*@
                        <th class="small-col-ombud">
                            Kundens personnummer
                        </th>
                        <th class="ssmall-col-ombud">
                            Första kalenderdag
                        </th>
                        <th class="ssmall-col-ombud">
                            Sista kalenderdag
                        </th>
                        @*<th class="ssmall-col-ombud">
                        Antal kalenderdagar
                    </th>*@
                        <th class="small-col-ombud">
                            Yrkat belopp (Kr)
                        </th>
                        <th class="xsmall-col-ombud">
                            Steg
                        </th>
                        <th class="small-col-ombud"></th>
                        <th class="small-col-ombud"></th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model.DraftClaims)
                    {
                        <tr>
                            <td>
                                @*@Html.ActionLink(item.ReferenceNumber, "_ShowClaim", "Claims", new { refNumber = item.ReferenceNumber }, new { @class = "btn btn-primary btn-primary-small" })*@
                                @Html.ActionLink(item.ReferenceNumber, "_ShowClaim", new { refNumber = item.ReferenceNumber }, new { @class = "btn-sm js-show-view-btn btn btn-primary btn-primary-small" })
                            </td>
                            <td>
                                @Html.ActionLink("Skapa Pdf", "ClaimDetailsAsPdf", new { refNumber = item.ReferenceNumber }, new { @class = "btn btn-secondary btn-secondary-small" })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreationDate)
                            </td>
                            @*<td>
                           @Html.DisplayFor(modelItem => item.OmbudEmail)
                        </td>*@
                            <td>
                                @Html.DisplayFor(modelItem => item.CustomerSSN)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FirstClaimDayShort)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastClaimDayShort)
                            </td>
                            @*<td>
                        @Html.DisplayFor(modelItem => item.NumberOfSickDays)
                        </td>*@
                            <td>
                                @Html.DisplayFor(modelItem => item.ClaimedSum)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CompletionStage)
                            </td>
                            <td>
                                @Html.ActionLink("Uppdatera", "Create1", new { refNumber = item.ReferenceNumber }, new { @role = "button", @class = "btn btn-secondary btn-secondary-small" })
                            </td>
                            <td>
                                @Html.ActionLink("Ta bort", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-danger-small" })
                            </td>
                            <td></td>
                        </tr>
                    }

                </table>
            }
            else if ((Model.SelectedTimePeriodId != null && Model.SelectedTimePeriodId != 0) || (Model.SelectedKeyId != null && Model.SelectedKeyId != 0) || Model.MyClaims || !string.IsNullOrWhiteSpace(Model.SearchString))
            {
                <div class="ordinary-text">
                    Du har inga utkast som uppfyller det valda filtret.
                </div>
            }
            else
            {
                <div class="ordinary-text">
                    Du har inga utkast.
                </div>
            }
        </div>
    </div>
    <hr class="claim-divider2" />

    <div class="row">
        <div class="col">
            @if (Model.UnderReviewClaims?.Count() > 0 && ((Model.SelectedTimePeriodId != null && Model.SelectedTimePeriodId != 0) || (Model.SelectedKeyId != null && Model.SelectedKeyId != 0) || Model.MyClaims || !string.IsNullOrWhiteSpace(Model.SearchString)))
            {
                <div class="second-page-header8">
                    Under handläggning (@Model.NumberOfReviewFiltered av @Model.NumberOfReview st)
                </div>
                <div class="ordinary-text">
                    @Model.FilterTextReview
                </div>
            }
            else if (Model.UnderReviewClaims?.Count() == 0 && ((Model.SelectedTimePeriodId != null && Model.SelectedTimePeriodId != 0) || (Model.SelectedKeyId != null && Model.SelectedKeyId != 0) || Model.MyClaims || !string.IsNullOrWhiteSpace(Model.SearchString)))
            {
                <div class="second-page-header8">
                    Under handläggning (@Model.NumberOfReviewFiltered av @Model.NumberOfReview st)
                </div>
            }
            else
            {
                <div class="second-page-header9">
                    Under handläggning (@Model.NumberOfReview st)
                </div>
            }

            @if (Model.UnderReviewClaims?.Count() > 0)
            {
                <table class="table">
                    <tr>
                        <th class="small-col-ombud">
                            Referensnummer
                        </th>
                        <th class="small-col-ombud"></th>
                        @*<th class="medium-col-ombud">
                    Handläggare
                    </th>*@
                        <th class="small-col-ombud">
                            Inskickad datum
                        </th>
                        <th class="small-col-ombud">
                            Kundens personnummer
                        </th>
                        <th class="ssmall-col-ombud">
                            Första kalenderdag
                        </th>
                        <th class="ssmall-col-ombud">
                            Sista kalenderdag
                        </th>
                        <th class="small-col-ombud">
                            Yrkat belopp (Kr)
                        </th>
                        <th class="xsmall-col-ombud"></th>
                        <th class="small-col-ombud"></th>
                        <th class="small-col-ombud"></th>
                        <th></th>

                    </tr>

                    @foreach (var item in Model.UnderReviewClaims)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(item.ReferenceNumber, "_ShowClaim", new { refNumber = item.ReferenceNumber }, new { @class = "btn-sm js-show-view-btn btn btn-primary btn-primary-small" })
                            </td>
                            <td>
                                @Html.ActionLink("Skapa Pdf", "ClaimDetailsAsPdf", new { refNumber = item.ReferenceNumber }, new { @class = "btn btn-secondary btn-secondary-small" })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SentInDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CustomerSSN)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FirstClaimDayShort)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastClaimDayShort)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ClaimedSum)
                            </td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    }
                </table>
            }
            else if ((Model.SelectedTimePeriodId != null && Model.SelectedTimePeriodId != 0) || (Model.SelectedKeyId != null && Model.SelectedKeyId != 0) || Model.MyClaims || !string.IsNullOrWhiteSpace(Model.SearchString))
            {
                <div class="ordinary-text">
                    Du har inga ansökningar under handläggning som uppfyller det valda filtret.
                </div>
            }
            else
            {
                <div class="ordinary-text">
                    Du har inga ansökningar under handläggning.
                </div>
            }
        </div>
    </div>
    <div id='myModal' class='modal' style="text-align:left;">
        <div class="modal-dialog" style="width:70%; height:400px; padding:10px;">
            @*<div class="modal-content" style="overflow: auto; padding:10px; background-color:#d2f5f4;">*@
            @*<div class="modal-content" style="overflow: auto; padding:10px; background-color:#f5f1dc;">*@
            <div class="modal-content" style="overflow: auto; padding:10px; background-color:#fbf9ef;">
                <button type="button" id="closbtn" float="right"> Stäng </button>
                <div style="height:10px;">
                </div>
                <div id='myModalContent' style="width:1000px; height:400px; padding:10px;">
                </div>
            </div>
        </div>
    </div>
    <hr class="claim-divider2" />
</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $('#PdfEventOmbud').delay(10000).hide(0);
    $('#PdfEventOmbudFail').delay(100000).hide(0);

    $("form").submit(function (e) {
        if (!checkIfKeySelected()) {
            //var erroronpage = document.getElementById('searchstring_butnokey');
            //erroronpage.innerHTML = "En söknyckel måste väljas om en söktext anges.";
            e.preventDefault();
        }
    });

    function checkIfKeySelected() {
        //check if search key has been selected
        var searchKeyDdl = document.getElementById('searchkey');
        var searchTextInput = document.getElementById('searchtext');
        var searchStringVal = document.getElementById('searchstring_butnokey');

        if (searchKeyDdl.selectedIndex == 0 && searchTextInput.value != "") {
            searchStringVal.innerHTML = "Söknyckel måste väljas om söktext anges.";
            return false;
        }
        else {
            searchStringVal.innerHTML = "";
            return true;
        }
    }

    function selectSearchKey() {
        //reset/set validation error
        var searchKeyDdl = document.getElementById('searchkey');
        var searchTextInput = document.getElementById('searchtext');
        var searchStringVal = document.getElementById('searchstring_butnokey');

        if (searchKeyDdl.selectedIndex != 0) {
            searchStringVal.innerText = "";
        }

        if (searchKeyDdl.selectedIndex == 0 && searchTextInput.value != "") {
            searchStringVal.innerText = "Söknyckel måste väljas om söktext anges.";
        }
    }

    function checkValidationError() {
        var searchKeyDdl = document.getElementById('searchkey');
        var searchTextInput = document.getElementById('searchtext');
        var searchStringVal = document.getElementById('searchstring_butnokey');

        if (searchKeyDdl.selectedIndex != 0) {
            searchStringVal.innerText = "";
        }

        if (searchKeyDdl.selectedIndex == 0 && searchTextInput.value != "") {
            searchStringVal.innerText = "Söknyckel måste väljas om söktext anges.";
        }
    }

    $(function () {
        $(".js-show-view-btn").click(function (e) {
            e.preventDefault();
            var $buttonClicked = $(this);
            var options = {
                "backdrop": "static",
                keyboard: true
            };
            $.ajax({
                method: "GET",
                url: "/Claims/_ShowClaim",
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                data: { refNumber: this.innerHTML },
                cache: false,
                success: function (data, textStatus, jqXHR) {
                    $("#myModalContent").html(data);
                    $("#myModal").modal(options);
                    $("#myModal").modal('show');
                }
            });
        })
        $("#closbtn").click(function () {
            $('#myModal').modal('hide');
        });
    });
</script>
